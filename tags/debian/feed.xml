<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Debian on Cloud Artisan</title><link>https://cloudartisan.com/tags/debian/</link><description>Recent content in Debian on Cloud Artisan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 04 Oct 2010 00:00:00 +1100</lastBuildDate><atom:link href="https://cloudartisan.com/tags/debian/feed.xml" rel="self" type="application/rss+xml"/><item><title>Install Hudson on Debian Lenny for Continuous Integration</title><link>https://cloudartisan.com/posts/install-hudson-on-debian-lenny-for-continuous-integration/</link><pubDate>Mon, 04 Oct 2010 00:00:00 +1100</pubDate><guid>https://cloudartisan.com/posts/install-hudson-on-debian-lenny-for-continuous-integration/</guid><description>&lt;p&gt;I found that Hudson depends on &lt;code&gt;daemon&lt;/code&gt; but it doesn&amp;rsquo;t install automatically. So, before we get started:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```bash
apt-get install daemon
&lt;/code&gt;&lt;/pre&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;

Now that&amp;#39;s out of the way, we need to grab the Hudson key and install the package:


 ```bash
 wget -q -O - http://hudson-ci.org/debian/hudson-ci.org.key | apt-key add -
 cd /tmp
 wget http://hudson-ci.org/latest/debian/hudson.deb
 dpkg --install ./hudson.deb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If everything went well you&amp;rsquo;ll see Hudson running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ps auxw | grep hudson
hudson 9101 0.0 0.1 2108 516 ? Ss 09:59 0:00 /usr/bin/daemon --name=hudson --inherit --env=HUDSON_HOME=/var/lib/hudson --output=/var/log/hudson/hudson.log --pidfile=/var/run/hudson/hudson.pid -- /usr/bin/java -jar /usr/share/hudson/hudson.war --webroot=/var/run/hudson/war --httpPort=8080 --ajp13Port=-1
hudson 9103 18.9 10.3 297064 52660 ? Sl 09:59 0:03 /usr/bin/java -jar /usr/share/hudson/hudson.war --webroot=/var/run/hudson/war --httpPort=8080 --ajp13Port=-1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;hellip; and listening on port 8080:&lt;/p&gt;</description></item><item><title>Install Cherokee (testing) on Debian Lenny</title><link>https://cloudartisan.com/posts/install-cherokee-testing-on-debian-lenny/</link><pubDate>Sat, 02 Oct 2010 00:00:00 +1000</pubDate><guid>https://cloudartisan.com/posts/install-cherokee-testing-on-debian-lenny/</guid><description>&lt;p&gt;Add the following to &lt;code&gt;/etc/sources&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```text
deb http://ftp.us.debian.org/debian/ testing main contrib non-free
&lt;/code&gt;&lt;/pre&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;

Create `/etc/apt/apt.conf` with:


 ```text
 APT::Default-Release &amp;#34;stable&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create &lt;code&gt;/etc/apt/preferences&lt;/code&gt; for pinning the testing packages:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```text
Package: libssl-dev
Pin: release a=testing
Pin-Priority: 999 
Package: libssl0.9.8
Pin: release a=testing
Pin-Priority: 999 
Package: libcherokee-base0
Pin: release a=testing
Pin-Priority: 999 
Package: mysql-common
Pin: release a=testing
Pin-Priority: 999 
Package: libmysqlclient16
Pin: release a=testing
Pin-Priority: 999 
Package: libcherokee-server0
Pin: release a=testing
Pin-Priority: 999 
Package: libcherokee-config0
Pin: release a=testing
Pin-Priority: 999 
Package: libcherokee-mod-admin
Pin: release a=testing
Pin-Priority: 999 
Package: cherokee
Pin: release a=testing
Pin-Priority: 999 
Package: *
Pin: release a=stable
Pin-Priority: 500
&lt;/code&gt;&lt;/pre&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;

Then install the packages:


 ```bash
 apt-get install -t testing cherokee libcherokee-base0 libcherokee-server0 libcherokee-config0 libcherokee-mod-admin libssl0.9.8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That&amp;rsquo;s the installation. For the configuration, check out the &lt;a href="http://www.cherokee-project.com/doc/cookbook.html" target="_blank" rel="noreferrer"&gt;Cherokee cookbooks&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Install EC2 AMI &amp; API Tools in Debian</title><link>https://cloudartisan.com/posts/install-ec2-tools-debian/</link><pubDate>Wed, 02 Jun 2010 00:00:00 +1000</pubDate><guid>https://cloudartisan.com/posts/install-ec2-tools-debian/</guid><description>&lt;p&gt;Download the zip files for the tools:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```bash
$ wget http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip
$ wget http://s3.amazonaws.com/ec2-downloads/ec2-ami-tools.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;
Unzip the tools:

 ```bash
 $ unzip ec2-api-tools.zip
 $ unzip ec2-ami-tools.zip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will give you some directories with version numbers appended.
Put them in a safe place:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```bash
$ mkdir /usr/local/ec2
$ cp -r ec2-ami-tools-1.3-34544/* /usr/local/ec2/
$ cp -r ec2-api-tools-1.3-42584/* /usr/local/ec2/
&lt;/code&gt;&lt;/pre&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;
Install Java:

 ```bash
 $ apt-get install sun-java6-jre
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Edit the system-wide profile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```bash
$ vi /etc/profile
&lt;/code&gt;&lt;/pre&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;
Add the following to the file:

 ```bash
 # EC2 Tools
 export EC2_HOME=/usr/local/ec2
 export PATH=$PATH:$EC2_HOME/bin
 export JAVA_HOME=/usr
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When someone logs in, their environment will be ready and raring
to go. Users can then issue commands such as:&lt;/p&gt;</description></item></channel></rss>